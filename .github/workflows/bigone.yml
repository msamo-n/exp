# This is a basic workflow to help you get started with Actions

name: Big One

on:
  workflow_dispatch:
    inputs:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        variant: [debug, release, releaseSyte]
    permissions:
      statuses: write
    steps:
      - run: |
          echo "Prepare ${{ matrix.variant }}..."
      
      - run: |
          OUTPUT_DIR='./build/outputs/apk/${{ matrix.variant }}'
          mkdir -p $OUTPUT_DIR
          echo "content of ${{ matrix.variant }} build" >$OUTPUT_DIR/text.txt
          tar -cvf ./outputs-apk-${{ matrix.variant }}.tar $OUTPUT_DIR

      - uses: actions/upload-artifact@v4
        with:
          name: outputs-apk-${{ matrix.variant }}.tar
          path: ./outputs-apk-${{ matrix.variant }}.tar

      - run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -d '{"state":"success","target_url":"https://example.com/build/status","description":"${{ matrix.variant }} - is good!","context":"Build ${{ matrix.variant }}"}'

  publish:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: outputs-apk-*.tar
          merge-multiple: true
          path: ./tmp/
      - run: |
          ls -lah ./tmp/
          for I in ./tmp/*.tar ; do tar -xvf $I ; done
          ls -lah ./
          ls -lah ./build/outputs/apk/
          ls -lah ./build/outputs/apk/debug/
          ls -lah ./build/outputs/apk/release/
          ls -lah ./build/outputs/apk/releaseSyte/
         

