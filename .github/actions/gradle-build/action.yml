name: 'Execute gradle tasks'
description: 'Execute tasks and report statuses'
inputs:
  variant:
    description: 'Build variant to use'
    required: false
    default: 'Release'
  test:
    description: 'Are unit tests to run?'
    required: false
    default: false
  lint:
    description: 'Is linter to run?'
    required: false
    default: false
  build:
    description: 'Is APKs to build?'
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - name: Prepare
      shell: bash
      run: |
        echo "STATUS_SHA=${{ github.event.pull_request.head.sha }}" >>$GITHUB_ENV

    - name: Run unit tests
      if: ${{ inputs.test == 'true' }}
      shell: bash
      run: |
        ${{ github.action_path }}/run-as-check.sh "Unit Tests (${{ inputs.variant }})" \
          './gradlew test${{ inputs.variant }}UnitTest'

    - name: Run linter
      if: ${{ inputs.lint == 'true' }}
      shell: bash
      run: |
        ${{ github.action_path }}/run-as-check.sh "Lint (${{ inputs.variant }})" \
          './gradlew lint${{ inputs.variant }}'

    - name: Build APKs
      if: ${{ inputs.build == 'true' }}
      shell: bash
      run: |
        ${{ github.action_path }}/run-as-check.sh "Build APK (${{ inputs.variant }})" \
          'sleep 10 ; echo "DONE!"'

    # - name: Pack APKs
    #   if: ${{ inputs.build }}
    #   run: |
    #     VAR=${{ matrix.variant }}
    #     tar -cvf outputs-apk-${{ inputs.variant }}.tar app/build/outputs/apk/${VAR,}/

    # - name: Upload APKs
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: outputs-apk-${{ inputs.variant }}.tar
    #     path: outputs-apk-${{ inputs.variant }}.tar
